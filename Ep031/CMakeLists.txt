#[==[
    . Using conan with CMake presets
        . This project is generated by following the official reference: 
            . https://docs.conan.io/2.0/examples/tools/cmake/cmake_toolchain/build_project_cmake_presets.html
        . Create the project: 
            . conan new -d name=foo -d version=1.0 cmake_exe
        . Change it to your liking: 
            . change the code in the main file
            . Change the conanfile.py to add dependencies you need
        . Run the conan install command to install dependencies: 
            . conan install . -s build_type=Debug -s compiler.cppstd=20
        . After it runs two CMakePresets.json files will be generated, one in the root and the other
            in the build folder.
        . The CMakeUserPresets.json isn't meant to be checked in your version control system.

        . Other developers are just supposed to download your project and run the conan install command to get started.

#]==]

cmake_minimum_required(VERSION 3.15)
project(Rooster CXX)

find_package(fmt CONFIG REQUIRED)
find_package(SFML COMPONENTS graphics CONFIG REQUIRED)

add_executable(rooster src/main.cpp)
target_link_libraries(rooster PRIVATE sfml-graphics fmt::fmt)

